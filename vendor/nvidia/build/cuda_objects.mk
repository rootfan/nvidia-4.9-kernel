###############################################################################
#
# Copyright (c) 2017, NVIDIA CORPORATION.  All rights reserved.
#
# NVIDIA CUDA Object Generation
#
# Using variables generated by cuda_nvcc_setup.mk and $(BUILD_SYSTEM)/binary.mk
#
###############################################################################

$(cuda_objects): $(import_includes)
$(cuda_objects): PRIVATE_CC                 := $(my_nvcc) -ccbin $(my_cxx)
$(cuda_objects): PRIVATE_CFLAGS             := $(my_nvcc_cflags) \
                                               $(addprefix -Xcompiler \',$(addsuffix \',$(my_cflags)))
$(cuda_objects): PRIVATE_CPPFLAGS           := $(addprefix -Xcompiler \',$(addsuffix \',$(my_cppflags)))
$(cuda_objects): PRIVATE_C_INCLUDES         := $(my_c_includes) $(my_target_c_includes) $(my_target_global_c_includes) $(my_target_global_c_system_includes)
$(cuda_objects): PRIVATE_MODULE             := $(LOCAL_MODULE)
$(cuda_objects): PRIVATE_IMPORT_INCLUDES    := $(import_includes)

$(cuda_objects): $(intermediates)/%.o: $(LOCAL_PATH)/%.cu \
    $(LOCAL_ADDITIONAL_DEPENDENCIES) \
	| $(my_nvcc) $(my_cxx)
	@echo "target CUDA: $(PRIVATE_MODULE) <= $<"
	@echo "C includes: $(PRIVATE_C_INCLUDES)"
	@mkdir -p $(dir $@)
	$(hide) $(PRIVATE_CC) \
	    $(addprefix -I , $(PRIVATE_C_INCLUDES)) \
	    $(PRIVATE_CFLAGS) \
	    $(PRIVATE_CPPFLAGS) \
            $(shell cat $(PRIVATE_IMPORT_INCLUDES)) \
	    -o $@ -c $<
	$(hide) $(PRIVATE_CC) \
	    $(addprefix -I , $(PRIVATE_C_INCLUDES)) \
	    $(PRIVATE_CFLAGS) \
	    $(PRIVATE_CPPFLAGS) \
            $(shell cat $(PRIVATE_IMPORT_INCLUDES)) \
	    -o $(patsubst %.o,%.d,$@) -MT $@ -M $<
	$(transform-d-to-p)

-include $(cuda_objects:%.o=%.P)
